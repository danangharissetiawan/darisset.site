# Generated by Django 2.2.8 on 2020-05-09 20:10

import ckeditor_uploader.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('taggit', '0003_taggeditem_add_unique_index'),
    ]

    operations = [
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interaction', models.PositiveIntegerField(default=0, verbose_name='interaction')),
                ('images', models.ImageField(blank=True, default='default.png', null=True, upload_to='blog/profile/thumbnail/%Y/%m/%d')),
                ('address', models.CharField(blank=True, max_length=100, null=True)),
                ('profesi', models.CharField(blank=True, max_length=100, null=True)),
                ('status', models.CharField(blank=True, max_length=250, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'Profile',
                'verbose_name_plural': 'Profiles',
                'ordering': ('user',),
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250, unique=True)),
                ('title_en', models.CharField(max_length=250, null=True, unique=True)),
                ('title_ind', models.CharField(max_length=250, null=True, unique=True)),
                ('slug', models.SlugField()),
                ('slug_en', models.SlugField(null=True)),
                ('slug_ind', models.SlugField(null=True)),
                ('category', models.CharField(choices=[('Jurnal', 'jurnal'), ('Edukasi', 'edukasi'), ('Entertaiment', 'entertaiment'), ('News', 'news'), ('Politics', 'politics'), ('Teknologi', 'teknologi')], max_length=50)),
                ('thumbnail', models.ImageField(upload_to='blog/post/thumbnail/%Y/%m/%d')),
                ('body', ckeditor_uploader.fields.RichTextUploadingField()),
                ('body_en', ckeditor_uploader.fields.RichTextUploadingField(null=True)),
                ('body_ind', ckeditor_uploader.fields.RichTextUploadingField(null=True)),
                ('publish', models.DateTimeField(null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=False)),
                ('bookmark', models.ManyToManyField(blank=True, related_name='bookmarks', to='blog.Profile', verbose_name='bookmark')),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='post', to='blog.Profile')),
            ],
            options={
                'verbose_name': 'Post',
                'verbose_name_plural': 'Posts',
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.TextField()),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('active', models.BooleanField(default=False)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='blog.Post')),
                ('reply', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='blog.Comment', verbose_name='reply')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.Profile')),
            ],
            options={
                'verbose_name': 'Comment',
                'verbose_name_plural': 'Comments',
                'ordering': ('-created',),
            },
        ),
    ]
